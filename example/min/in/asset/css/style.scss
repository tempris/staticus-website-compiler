@use "sass:math";
@use "sass:color";

@use './_config/variable' as config_variable;

// Function to calculate relative luminance
@function luminance($color) {
  // Get the RGB values of the color
  $rgb: color.channel($color, "red", $space: rgb), color.channel($color, "green", $space: rgb), color.channel($color, "blue", $space: rgb);
  
  // Convert RGB to sRGB
  $r: math.div(color.channel($color, "red", $space: rgb), 255);
  $g: math.div(color.channel($color, "green", $space: rgb), 255);
  $b: math.div(color.channel($color, "blue", $space: rgb), 255);

  // Apply the sRGB to linear RGB conversion formula
  @return 0.2126 * if($r <= 0.03928, math.div($r, 12.92), pow(($r + 0.055) / 1.055, 2.4)) +
         0.7152 * if($g <= 0.03928, math.div($g, 12.92), pow(($g + 0.055) / 1.055, 2.4)) +
         0.0722 * if($b <= 0.03928, math.div($b, 12.92), pow(($b + 0.055) / 1.055, 2.4));
}

// Function to determine text color based on background color
@function text-color($bg-color) {
  $luminance: luminance($bg-color);
  
  // Check the luminance and return black or white
  @if ($luminance < 0.5) {
    @return #ffffff; // Light text for dark backgrounds
  } @else {
    @return #000000; // Dark text for light backgrounds
  }
}

body {
  background-color: config_variable.$CONFIG_CUSTOM_BRAND_COLOR;
  margin: 0px;
  text-align: center;
}

body, a {
  color: text-color(config_variable.$CONFIG_CUSTOM_BRAND_COLOR);
}

a {
  &:hover {
    opacity: 0.75;
  }

  &:active {
    opacity: 0.5;
  }
}

main, header, footer {
  padding: 1rem;
}

header, footer {
  background-color: rgba(text-color(config_variable.$CONFIG_CUSTOM_BRAND_COLOR), 0.15);
}

.skip_to_main {
  position: fixed;
  top: -100%;

  &:focus {
    top: 0px;
  }
}
