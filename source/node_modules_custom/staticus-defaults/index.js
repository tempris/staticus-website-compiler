const module_fs = require('fs');
const module_path = require('path');

function getRootPath(path) {
    return module_path.resolve(__dirname, '../../../', path);
}

const logFilePath = module_path.resolve(getRootPath('_log'), 'defaults.log');

const { Log } = require(getRootPath('source/node_modules_custom/cure-log'));
const log = new Log(logFilePath);

const logTagDefaults = '[📝 Defaults]';

const path_config_default = getRootPath('config/default');
const path_config = getRootPath('config');

const files_staticus = [
    "settings.json"
]

// Initialization function
function configEnsure() {
    log.begin(logTagDefaults, "Initializing...");

    log.info(logTagDefaults, 'Default Config Path:', path_config_default);
    log.info(logTagDefaults, 'Config Path:', path_config);

    try {
        files_staticus.forEach(file => {
            const defaultFilePath = module_path.resolve(path_config_default, file);
            const targetFilePath = module_path.resolve(path_config, file);

            if (!module_fs.existsSync(targetFilePath)) {
                if (module_fs.existsSync(defaultFilePath)) {
                    module_fs.copyFileSync(defaultFilePath, targetFilePath);
                    log.success(logTagDefaults, 'Initialized file from default:', defaultFilePath);
                } else {
                    log.error(logTagDefaults, 'Initialization failed, default file missing:', defaultFilePath);
                    process.exit(1); // Exit with an error code
                }
            } else {
                log.success(logTagDefaults, 'File already exists:', targetFilePath);
            }
        });
    } catch (error) {
        log.error(logTagDefaults, 'An error occurred during initialization:', error);
        process.exit(1); // Exit with an error code
    }

    log.end(logTagDefaults, "Complete.");
}

module.exports = { configEnsure };
