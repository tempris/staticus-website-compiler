const module_fs = require('fs');
const module_path = require('path');
const readline = require('readline');
const { Log } = require(module_path.resolve(__dirname, '../cure-log'));

// Accept log file path as an argument
const logFilePath = module_path.resolve(process.argv[2]) || module_path.resolve(__dirname, '_log', 'app.log');
const log = new Log(logFilePath);

const logTagBridge = '[ðŸŒ‰ Log Bridge Python]'

process.stdout.setDefaultEncoding('utf8');

// Setup input stream reader
const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout,
    terminal: false
});

function end() {
    process.stdout.write('LOG_BRIDGE_END\n');
    process.stderr.write('LOG_BRIDGE_END\n');
}

rl.on('line', (line) => {
    if (!line.trim()) {
        log.error('Received empty log message');
        end();
        return;
    }

    try {
        const { level, args } = JSON.parse(line);
        if (typeof log[level] === 'function') {
            log[level](...args);
            end();
        } else {
            log.error(`Invalid log level: ${level}`);
            end();
        }
    } catch (error) {
        log.error("Error parsing log message:", error);
        end();
    }
});

log.init(logTagBridge, 'Logger initialized. Writing logs to:', {logFilePath});
